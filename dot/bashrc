# bash options {{{

set -o vi
shopt -s autocd

# }}}
# exports {{{

export LANG=en_GB.UTF-8
export TERM=xterm-256color
export EDITOR=nvim

# }}}
# path {{{

export GNUBIN_PATH=/usr/local/opt/coreutils/libexec/gnubin
export TEXBIN=/Library/TeX/texbin
export PACKER_BIN=~/bin/packer_0.8.6_darwin_amd64
export PHALCON_PATH=/Volumes/Development/devtools/phalcon-devtools
export GCLOUD_PATH=/Volumes/Development/devtools/google-cloud-sdk
PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
PATH="$PHALCON_PATH:$PATH"
PATH="$GCLOUD_PATH:$PATH"
PATH="$GNUBIN_PATH:$PATH"
PATH="$TEXBIN:$PATH"
PATH="$PACKER_BIN:$PATH"

MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

export PATH

# }}}

# plugins {{{

# colors for GNU ls (from coreutils)
eval `dircolors ~/.lscolors`

# }}}

# terminal colors {{{

TC='\e['
Rst="${TC}0m"
Black="${TC}30m";
Red="${TC}31m";
Green="${TC}32m";
Yellow="${TC}33m";
Blue="${TC}34m";
Purple="${TC}35m";
Cyan="${TC}36m";
White="${TC}37m";

# }}}

# alias | binds {{{

# Ag (the silver searcher)
alias ag='ag --hidden --path-to-agignore=~/.agignore'

# alias for frequent commands
alias ls='ls --color=auto --group-directories-first'
alias l='ls -lah'
alias b='cd ..'
alias c='clear'
alias e='exit'
alias w='echo -e "$Blue $PWD ${Red}at ${Cyan}$(whoami)${Red}@${Yellow}$(hostname -s)$Red in $Yellow$0$Purple \$"'
alias s='du -sm * | sort -nr | head -n 20'
alias m='nman'
alias vi='nvim -u NONE -N'
alias vim='nvim -u NONE -N'
alias v='nvim'
alias nv='nvim'
alias k='k -h'
alias vz='v ~/.bashrc'
alias vv='v ~/.vimrc'
alias tarc='tar -zcvf file.tar.gz'
alias tarx='tar -zxvf'
alias dot='l `find ~ -maxdepth 1 -type l`'

# rust alias
alias rd='open /usr/local/share/doc/rust/html/index.html'

# working with pushd and popd
alias di='dirs -v | head -n 10'
alias dic='dirs -c'
alias po='popd'

# git alias
alias g='git status -sb'
alias gg='git branch -vv'
alias gs='git status'
alias ga='git add'
alias gal='git add -A'
alias gc='git commit -v'
alias gd='git diff'
alias gds='git diff --stat'
alias gdh='git diff --cached'
alias gf='git fetch'
alias gm='git merge'
alias gp='git push'
alias gl='git log --pretty=format:"%C(yellow)%h%Creset %C(cyan)%ad%Creset %C(magenta)%an%Creset %s" --date=relative --graph'
alias gld='git log --pretty=format:"%C(yellow)%h%Creset %C(cyan)%ad%Creset %C(magenta)%an%Creset %s" --graph'
alias glr='gl --reflog'
alias glf='git log --follow -p -- '
alias glnc='git log --pretty=format:"%h %ad %an %s" --date=short --graph'
alias gls='git log --graph --oneline'
alias glsi='git ls-files -oiX .gitignore'
alias gi='builtin cd $(git rev-parse --show-toplevel)'

# Show/hide hidden files
alias safy='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
alias safn='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'

# Control Vagrant in working directory
alias vu='vagrant up'
alias vs='vagrant ssh'
alias vh='vagrant halt'

# Change working directory to CV - Change paths to reflect your local file system
alias cvapp='cd /Volumes/Development/cv/jdi-resume-app'
alias cvwzapp='cd /Volumes/Development/cv/webzai-resume-app'
alias cvphuse='cd /Volumes/Development/cv/jdi-resume-app/vendor/phuse/framework'
alias cvbox='cd /Volumes/Development/cv/box'

# Control CV Vagrant box from any working directory
alias cvu='cvbox; vu'
alias cvs='cvbox; vs'
alias cvh='cvbox; vh'

# Run CV Vagrant CLI scripts from any working directory
alias cvit="cvbox; vagrant ssh -- 'cd /var/www/jdi-resume-app/releases/dev; ENV=dev php cli/interval.php dispatch:intervalTasks:phuse:interval'"
alias cvdt="cvbox; vagrant ssh -- 'cd /var/www/jdi-resume-app/releases/dev; ENV=dev php cli/event.php dispatch:devTasks:phuse:interval PLANService,billing,eigvpn,event,fail,fortifi,log,phuseService,report,retry,stats,user'"
alias cvm="cvbox; vagrant ssh -- 'cd /var/www/jdi-webzai-app/releases/dev; ENV=dev php vendor/bin/migrant migrate'"
alias cvn="cvbox; vagrant ssh -- 'sudo service nginx restart'"

# Change working directory to VPN - Change paths to reflect your file system
alias vpnapp='cd /Volumes/Development/vpn/jdi-vpn-app'
alias vpnphuse='cd /Volumes/Development/vpn/jdi-vpn-app/vendor/phuse/framework'
alias vpnbox='cd /Volumes/Development/vpn/box'

# Control VPN Vagrant box from any working directory
alias vpnu='vpnbox; vu'
alias vpns='vpnbox; vs'
alias vpnh='vpnbox; vh'

# Run VPN Vagrant CLI scripts from any working directory
alias vpnit="vpnbox; vagrant ssh -- 'cd /var/www/jdi-vpn-app/current; ENV=dev php cli/interval.php dispatch:intervalTasks:phuse:interval'"
alias vpndt="vpnbox; vagrant ssh -- 'cd /var/www/jdi-vpn-app/current; ENV=dev php cli/event.php dispatch:devTasks:phuse:interval PLANService,billing,eigvpn,event,fail,fortifi,log,phuseService,report,retry,stats,user'"
alias vpnm="vpnbox; vagrant ssh -- 'cd /var/www/jdi-vpn-app/current; ENV=dev php cli/migrant migrate'"
alias vpnn="vpnbox; vagrant ssh -- 'sudo service nginx restart'"

alias cv-qa-rmq-tunnel='ssh -N qa-jump.cvdev.co -l spjz -L 127.0.0.1:15676:cv-qa-rmq-alpha-001.c.jdicvlab.internal:15672'
alias cv-prd-rmq-tunnel='ssh -N prod-jump.cvdev.co -l spjz -L 127.0.0.1:15676:cv-prod-rmq-alpha-001.c.jdicvlab.internal:15672'
alias vpn-prd-rmq-tunnel='ssh -N prod-jump.vpndev.co -l spjz -L 127.0.0.1:15676:vpn-prod-rmq-alpha-001.c.jdivpn.internal:15672'
alias vpn-qa-rmq-tunnel='ssh -N qa-jump.vpndev.co -l spjz -L 127.0.0.1:15676:vpn-qa-rmq-alpha-001.c.jdivpn.internal:15672'

# Google Cloud Compute SDK
source /Volumes/Development/devtools/google-cloud-sdk/completion.zsh.inc
source /Volumes/Development/devtools/google-cloud-sdk/path.zsh.inc


# }}}

# custom functions {{{

md () {
  mkdir -p $1
  cd $1
}

cd () {
  if [[ $# -eq 0 ]]; then
    builtin cd ~
  elif [[ "$1" == "-" ]]; then
    builtin cd -
  else
    pushd $1 && c && l
  fi
}

# neoman vim plugin
function nman () {
    if [[ -z $* ]]; then
        echo "What manual page do you want?"
        return
    fi
    local tmp=$IFS
    IFS=$'\n' out=($(command man -w $* 2>&1))
    local code=$?
    IFS=$tmp
    if [[ ${#out[@]} > 1 ]]; then
        echo "Too many manpages"
        return
    elif [[ $code != 0 ]]; then
        echo "No manual entry for $*"
        return
    fi
    vim -c "Nman $*"
}

# RabitMQ
tunnel() {
  if [ ! -n "$1" ]
  then
    echo "Missing argument: product"
    echo "Using default: vpn"
    1="vpn"
  fi
  if [ ! -n "$2" ]
  then
    echo "Missing argument: environment"
    echo "Using default: qa"
    2="qa"
  fi
  if [ ! -n "$3" ]
  then
    echo "Missing argument: box"
    echo "Using default: rmq"
    3="rmq"
  fi
  if [ ! -n "$4" ]
  then
    echo "Missing argument: cluster"
    echo "Using default: beta"
    4="beta"
  fi
  if [ ! -n "$5" ]
  then
    echo "Missing argument: instance"
    echo "Using default: 001"
    5="001"
  fi
  if [ ! -n "$6" ]
  then
    echo "Missing argument: local port"
    echo "Using default: 15676"
    6="15676"
  fi
  if [ ! -n "$7" ]
  then
    echo "Missing argument: remote port"
    echo "Using default: 15672"
    7="15672"
  fi

  case $1 in
    "cv")
      echo "ssh -N $2-jump.cvdev.co -l spjz -L 127.0.0.1:$6:$1-$2-$3-$4-$5.c.jdicvlab.internal:$7"
      ssh -N $2-jump.cvdev.co -l spjz -L 127.0.0.1:$6:$1-$2-$3-$4-$5.c.jdicvlab.internal:$7
      ;;
    "vpn")
      echo "ssh -N $2-jump.vpndev.co -l spjz -L 127.0.0.1:$6:$1-$2-$3-$4-$5.c.jdivpn.internal:$7"
      ssh -N $2-jump.vpndev.co -l spjz -L 127.0.0.1:$6:$1-$2-$3-$4-$5.c.jdivpn.internal:$7
      ;;
  esac
}

# }}}

# prompt {{{

export PS1="${Blue}\w ${Red}\u${Cyan}@${Yellow}\h ${Purple}#${Rst} "

# }}}
